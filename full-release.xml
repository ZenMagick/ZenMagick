<!-- $Id$ -->
<project name="full-release" default="" basedir=".">

    <!-- The full release build dir -->
    <property name="release.full.dir" value="${build.dir}/full" />
    <!-- Line ending to be used for multi line substitutes -->
    <property name="nl" value="&#13;&#10;" />


    <!-- build full release -->
    <target name="full-release" depends="mod-release" description="Build full release including zen cart.">
        <mkdir dir="${release.full.dir}" />
        <!-- overwrite to get a fresh copy -->
        <copy todir="${release.full.dir}" overwrite="true">
            <fileset dir="${zencart.base.dir}">
                <exclude name=".git/**" />
                <exclude name="extras/**" />
            </fileset>
        </copy>
        <!-- copy extras folder into install_zc to make it more likely it gets removed... -->
        <mkdir dir="${release.full.dir}/extras" />
        <copy todir="${release.full.dir}/zc_install/extras">
          <fileset dir="${zencart.base.dir}/extras">
            </fileset>
        </copy>

        <!-- apply-full-release-patches -->
        <antcall target="apply-full-release-patches" />

        <!-- create theme dummy files -->
        <antcall target="create-theme-dummy"><param name="theme.id" value='default' /></antcall>
        <antcall target="create-theme-dummy"><param name="theme.id" value='demo' /></antcall>

        <!-- create sidebox dummy files -->
        <antcall target="create-sidebox-dummies"><param name="theme.id" value='default' /></antcall>

        <!-- dump install phpBB stuff -->
        <!-- NOT THAT SIMPLE! antcall target="dump-phpbb-install"></antcall-->

        <!-- move ZenMagick SQL to the right place -->
        <copy file="${zenmagick.src.dir}/lib/store/etc/sql/mysql/config.sql" tofile="${release.full.dir}/zc_install/sql/plugins/mysql_config.sql" />
        <copy file="${zenmagick.src.dir}/lib/store/etc/sql/mysql/token_install.sql" tofile="${release.full.dir}/zc_install/sql/plugins/mysql_token_install.sql" />
        <copy file="${basedir}/etc/build/mysql_default_sideboxes.sql" todir="${release.full.dir}/zc_install/sql/plugins/" />
        <copy file="${basedir}/etc/build/mysql_other.sql" todir="${release.full.dir}/zc_install/sql/plugins/" />

        <!-- wrap it all up -->
        <unzip src="${dist.dir}/zenmagick-${zenmagick.version}.zip" dest="${release.full.dir}" />

        <!-- and zip -->
        <zip zipfile="${dist.dir}/${full.version.file}.zip" basedir="${release.full.dir}" />
        <checksum file="${dist.dir}/${full.version.file}.zip" fileext=".sha" algorithm="SHA" todir="${dist.dir}/checksum" />

    </target>

    <!-- patch full release -->
    <target name="apply-full-release-patches" description="Patch full release including zen cart.">
        <!-- add zenmagick admin -->
        <antcall target="insert-after">
            <param name="insert.file" value="${release.full.dir}/admin/includes/boxes/extras_dhtml.php" />
            <param name="insert.regexp" value="extras_dhtml_eof" />
            <param name="insert.substitution" value="&lt;?php require(DIR_WS_BOXES.'zenmagick_dhtml.php'); /* added by ZenMagick installation patcher */ ?&gt;" />
        </antcall>

        <!-- add event proxy code -->
        <antcall target="insert-after">
            <param name="insert.file" value="${release.full.dir}/includes/classes/class.base.php" />
            <param name="insert.regexp" value="function notify\(" />
            <param name="insert.substitution" value='    if(class_exists("ZMEvents")) { ZMEvents::instance()->update($$this, $$eventID, $$paramArray); } /* added by ZenMagick installation patcher */' />
        </antcall>

        <!-- patch zen_href_link -->
        <antcall target="rename-function">
            <param name="rename.file" value="${release.full.dir}/includes/functions/html_output.php" />
            <param name="rename.function" value="zen_href_link" />
            <param name="rename.suffix" value="_DISABLED" />
        </antcall>

        <!-- patch email funcs -->
        <antcall target="rename-function">
            <param name="rename.file" value="${release.full.dir}/includes/functions/functions_email.php" />
            <param name="rename.function" value="zen_mail" />
            <param name="rename.suffix" value="_org" />
        </antcall>
        <antcall target="rename-function">
            <param name="rename.file" value="${release.full.dir}/includes/functions/functions_email.php" />
            <param name="rename.function" value="zen_build_html_email_from_template" />
            <param name="rename.suffix" value="_org" />
        </antcall>

        <!-- i18n patches -->
        <antcall target="rename-function">
            <param name="rename.file" value="${release.full.dir}/includes/languages/english.php" />
            <param name="rename.function" value="zen_date_raw" />
            <param name="rename.suffix" value="_DISABLED" />
        </antcall>
        <antcall target="rename-function">
            <param name="rename.file" value="${release.full.dir}/admin/includes/languages/english.php" />
            <param name="rename.function" value="zen_date_raw" />
            <param name="rename.suffix" value="_DISABLED" />
        </antcall>

        <!-- edit customer patch -->
        <antcall target="insert-after">
          <param name="insert.file" value="${release.full.dir}/admin/customers.php" />
            <param name="insert.regexp" value="where customers_email_address = " />
            <param name="insert.substitution" value="  and NOT customers_password = ''" />
        </antcall>

        <!-- no themes support patch -->
        <antcall target="insert-before">
            <param name="insert.file" value="${release.full.dir}/includes/application_bottom.php" />
            <param name="insert.regexp" value="session_write_close" />
            <param name="insert.substitution" value="if (!ZMSettings::get('isEnableZMThemes')) { $$_zm_args = ZMEvents::instance()->fireEvent(null, Events::FINALISE_CONTENTS, array('contents' => ob_get_clean(), 'request' => ZMRequest::instance())); echo $$_zm_args['contents']; ZMRequest::instance()->getSession()->clearMessages(); ZMEvents::instance()->fireEvent(null, Events::ALL_DONE, array('request' => ZMRequest::instance())); } /* added by ZenMagick installation patcher */" />
        </antcall>

        <!-- theme support patch -->
        <antcall target="insert-before">
            <param name="insert.file" value="${release.full.dir}/index.php" />
            <param name="insert.regexp" value="require.*html_header.php" />
            <param name="insert.substitution" value="  include('zenmagick/store.php'); /* added by ZenMagick installation patcher */" />
        </antcall>

        <!-- coupon admin patch -->
        <antcall target="insert-after">
            <param name="insert.file" value="${release.full.dir}/admin/coupon_admin.php" />
            <param name="insert.regexp" value="audience_select = get_audience_sql_query" />
            <param name="insert.substitution" value='    $audience_select["query_string"] = $db->bindVars("select customers_id, customers_firstname, customers_lastname, customers_email_address from " . TABLE_CUSTOMERS . " where customers_email_address = :emailAddress", ":emailAddress", zen_db_prepare_input($_POST["customers_email_address"]), "string"); // added by ZenMagick' />
        </antcall>
        <antcall target="insert-after">
            <param name="insert.file" value="${release.full.dir}/admin/coupon_admin.php" />
            <param name="insert.regexp" value="html_msg\['EMAIL_FIRST_NAME'\] =" />
            <param name="insert.substitution" value='      $html_msg["accountId"] = $mail->fields["customers_id"]; // added by ZenMagick' />
        </antcall>

    </target>


    <!-- function rename -->
    <target name="rename-function" description="Rename a function.">
        <!-- rename.file, rename.function, rename.suffix  -->
        <replaceregexp flags="m">
            <fileset file="${rename.file}" />
            <regexp pattern="(.*function \s*)(${rename.function})(\s*\(.*\{)(\s*$)"/>
            <substitution expression='\1\2${rename.suffix}\3 /* modified by ZenMagick installation patcher */\4' />
        </replaceregexp>
    </target>

    <!-- insert after -->
    <target name="insert-after" description="Insert code after the given pattern.">
        <!-- insert.file, insert.regexp, insert.substitution  -->
        <replaceregexp flags="m" byline="true">
            <fileset file="${insert.file}" />
            <regexp pattern="(.*${insert.regexp}.*)"/>
            <substitution expression="\1${nl}${insert.substitution}" />
        </replaceregexp>
    </target>

    <!-- insert before -->
    <target name="insert-before" description="Insert code before the given pattern.">
        <!-- insert.file, insert.regexp, insert.substitution  -->
        <replaceregexp flags="m" byline="true">
            <fileset file="${insert.file}" />
            <regexp pattern="(.*${insert.regexp}.*)"/>
            <substitution expression="${insert.substitution}${nl}\1" />
        </replaceregexp>
    </target>

    <!-- build theme dummy -->
    <target name="create-theme-dummy" description="Create theme dummy file for zen cart.">
        <!-- theme.id  -->
        <mkdir dir="${release.full.dir}/includes/templates/${theme.id}" />

        <!-- get a defined filename -->
        <concat destfile="${build.dir}/theme_info.php"><fileset dir="${zenmagick.src.dir}/themes/${theme.id}" includes="*.php"/></concat>
        <!-- prepare info lines -->
        <replaceregexp flags="" byline="true">
            <fileset file="${build.dir}/theme_info.php" />
            <regexp pattern=".*->set(Name|Version|Author|Description)\('(.*)'.*"/>
            <substitution expression="  $template_\1 = '\2';" />
        </replaceregexp>
        <!-- a bit brute force -->
        <replaceregexp file="${build.dir}/theme_info.php" match="_Name" replace="_name" />
        <replaceregexp file="${build.dir}/theme_info.php" match="_Version" replace="_version" />
        <replaceregexp file="${build.dir}/theme_info.php" match="_Author" replace="_author" />
        <replaceregexp file="${build.dir}/theme_info.php" match="_Description" replace="_description" />

        <concat destfile="${build.dir}/template_info.php" eol="dos">
            <header filtering="no" trimleading="yes">&lt;?php /** dummy file created by ZenMagick installation patcher **/
            </header>
            <path path="${build.dir}/theme_info.php"/>
            <filterchain>
                <linecontains>
                    <contains value="template_"/>
                </linecontains>
            </filterchain>
            <footer filtering="no" trimleading="no">  $template_screenshot = 'preview.jpg';
?&gt;</footer>
        </concat>

        <!-- copy to zencart's template folder -->
        <copy file="${build.dir}/template_info.php" todir="${release.full.dir}/includes/templates/${theme.id}" />

        <!-- copy image as well... -->
        <mkdir dir="${release.full.dir}/includes/templates/${theme.id}/images" />
        <copy file="${zenmagick.src.dir}/themes/${theme.id}/preview.jpg" todir="${release.full.dir}/includes/templates/${theme.id}/images" />

    </target>


    <!-- build sidebox dummy files -->
    <target name="create-sidebox-dummies" description="Create sidebox dummy files for zen cart.">
        <concat destfile="${build.dir}/sidebox_dummy.php" eol="dos">&lt;?php /** dummy file created by ZenMagick installation patcher **/ ?&gt;</concat>
        <foreach target="update-sidebox-dummy" param="filename">
            <path>
              <fileset dir="${zenmagick.src.dir}/themes/default/content/boxes" includes="*.php" />
              <fileset dir="${zenmagick.src.dir}/themes/demo/content/boxes" includes="*.php" />
            </path>
        </foreach>
    </target>

    <!-- update sidebox dummy -->
    <target name="update-sidebox-dummy" description="Create sidebox dummy if necessary.">
        <basename property="basename" file="${filename}"/>
        <!-- touch target to avoid overwriting existing files! -->
        <touch file="${release.full.dir}/includes/modules/sideboxes/${basename}" />
        <copy overwrite="false" tofile="${release.full.dir}/includes/modules/sideboxes/${basename}" file="${build.dir}/sidebox_dummy.php" />
    </target>

    <!-- remove phpBB from installation -->
    <target name="dump-phpbb-install" description="Remove phpBB dialog from installation.">
        <!-- fix redirect to skip phpBB -->
        <replaceregexp>
            <fileset file="${release.full.dir}/zc_install/includes/modules/pages/system_setup/header_php.php" />
            <regexp pattern="main_page=phpbb_setup"/>
            <substitution expression='main_page=store_setup' />
        </replaceregexp>
        <replaceregexp flags="m">
            <fileset file="${release.full.dir}/zc_install/includes/templates/template_default/sideboxes/navigation.php" />
            <regexp pattern="^.*phpbb.*$"/>
            <substitution expression='' />
        </replaceregexp>
    </target>

</project>
