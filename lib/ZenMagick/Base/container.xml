<?xml version="1.0" ?>

<!-- base container -->
<container xmlns="http://symfony.com/schema/dic/services"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <parameters>
        <parameter key="zenmagick.base.plugins.defaultPluginClass">ZenMagick\Base\Plugins\Plugin</parameter>
        <parameter key="zenmagick.base.plugins.dirs" type="collection">
            <parameter>%zenmagick.root_dir%/plugins</parameter>
            <parameter>%zenmagick.root_dir%/apps/%kernel.context%/plugins</parameter>
        </parameter>
    </parameters>

    <services>

        <service id="pdo" class="PDO">
            <argument>mysql:dbname=%database_name%</argument>
            <argument>%database_user%</argument>
            <argument>%database_password%</argument>
        </service>

        <service id="containerTagService" class="ZenMagick\Base\DependencyInjection\Tags\ContainerTagService" />

        <service id="transientCache" class="ZenMagick\Base\Cache\MemoryCache">
            <call method="init">
                <argument>global</argument>
                <argument type="collection" />
            </call>
        </service>

        <service id="persistentCache" class="ZenMagick\Base\Cache\FileCache">
            <call method="init">
                <argument>global</argument>
                <argument type="collection">
                    <argument key="cacheTTL">300</argument>
                    <argument key="cacheDir">%kernel.cache_dir%/files/</argument>
                </argument>
            </call>
        </service>

        <service id="bootstrapCache" class="ZenMagick\Base\Cache\FileCache">
            <call method="init">
                <argument>bootstrap</argument>
                <argument type="collection">
                    <argument key="cacheTTL">null</argument>
                    <argument key="cacheDir">%kernel.cache_dir%/files/</argument>
                </argument>
            </call>
        </service>

        <service id="localeService" class="ZenMagick\Base\Locales\Locales">
            <argument>%kernel.default_locale%</argument>
        </service>
        <service id="localeScanner" class="ZenMagick\Base\Locales\LocaleScanner" scope="prototype">
            <call method="setFilesystem">
                <argument type="service" id="filesystem" />
            </call>
        </service>

        <service id="settingsService" class="ZenMagick\Base\Settings\Settings" />

        <service id="contextConfigLoader" class="ZenMagick\Base\Utils\ContextConfigLoader" scope="prototype">
            <call method="setContainer">
                <argument type="service" id="service_container" />
            </call>
            <call method="setContext">
                <argument>%kernel.context%</argument>
            </call>
            <call method="setSettingsService">
                <argument type="service" id="settingsService" />
            </call>
        </service>

        <service id="pluginService" class="ZenMagick\Base\Plugins\Plugins">
            <argument type="service" id="pluginStatusMapBuilder" />
            <argument type="service" id="contextConfigLoader" strict="false" />
            <call method="setCache">
                <argument type="service" id="bootstrapCache" />
            </call>
            <call method="setContainer">
                <argument type="service" id="service_container" />
            </call>
        </service>

        <service id="pluginOptionsLoader" class="ZenMagick\Base\Plugins\PluginOptionsLoader" />

        <service id="pluginStatusMapBuilder" class="ZenMagick\Base\Plugins\PluginStatusMapBuilder">
            <argument>%zenmagick.base.plugins.defaultPluginClass%</argument>
            <argument>%zenmagick.base.plugins.dirs%</argument>
            <argument type="service" id="pluginOptionsLoader" />
            <argument type="service" id="bootstrapCache" />
            <tag name="kernel.cache_warmer" />
        </service>

        <service id="sha1AuthenticationProvider" class="ZenMagick\Base\Security\Authentication\Provider\Sha1AuthenticationProvider">
            <tag name="zenmagick.base.security.authentication.provider" />
        </service>

        <service id="phPassAuthenticationProvider" class="ZenMagick\Base\Security\Authentication\Provider\PhPassAuthenticationProvider">
            <tag name="zenmagick.base.security.authentication.provider" />
        </service>

        <service id="filesystem" class="Symfony\Component\Filesystem\Filesystem" />

        <service id="phpCompressor" class="ZenMagick\Base\Utils\packer\PhpCompressor" scope="prototype">
            <call method="setFilesystem">
                <argument type="service" id="filesystem" />
            </call>
        </service>
        <service id="phpPackagePacker" class="ZenMagick\Base\Utils\packer\PhpPackagePacker" scope="prototype">
            <call method="setFilesystem">
                <argument type="service" id="filesystem" />
            </call>
            <call method="setPhPhPPCompressor">
                <argument type="service" id="phpCompressor" />
            </call>
        </service>
    </services>
</container>
