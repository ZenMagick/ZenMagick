<?xml version="1.0" ?>

<!-- http container -->
<container xmlns="http://symfony.com/schema/dic/services"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <parameters>
        <parameter key="zenmagick.cacheIds" type="collection">
            <parameter>transientCache</parameter>
            <parameter>persistentCache</parameter>
            <parameter>servicesCache</parameter>
            <parameter>templateCache</parameter>
            <parameter>bootstrapCache</parameter>
        </parameter>
        <parameter key="apps.store.reviews.useNickName">false</parameter>
        <parameter key="zenmagick.themes.default_theme">base</parameter>
    </parameters>

    <services>
        <service id="bootstrapCache" class="ZenMagick\Base\Cache\FileCache">
            <call method="init">
                <argument>bootstrap</argument>
                <argument type="collection">
                    <argument key="cacheTTL">null</argument>
                    <argument key="cacheDir">%kernel.root_dir%/cache/%kernel.environment%/bootstrap/</argument>
                </argument>
            </call>
        </service>

        <service id="servicesCache" class="ZenMagick\Base\Cache\MemoryCache">
            <call method="init">
                <argument>services</argument>
                <argument type="collection" />
            </call>
        </service>

        <service id="templateCache" class="ZenMagick\Base\Cache\FileCache">
            <call method="init">
                <argument>services</argument>
                <argument type="collection">
                    <argument key="cacheTTL">300</argument>
                    <argument key="cacheDir">%kernel.cache_dir%/templates/</argument>
                </argument>
            </call>
        </service>

        <service id="accountService" class="ZMAccounts" />

        <service id="addressService" class="ZMAddresses" />

        <service id="countryService" class="ZenMagick\StoreBundle\Services\Location\CountryService" />

        <service id="orderService" class="ZMOrders" />

        <service id="theme" class="ZenMagick\StoreBundle\Themes\Theme" scope="prototype" />

        <!-- @todo move to bundle xml when we have one -->
        <!-- <service id="themeStatusMapBuilder" class="ZenMagick\StoreBundle\Themes\ThemeStatusMapBuilder"> -->
        <service id="themeStatusMapBuilder" class="ZenMagick\ZenCartBundle\Mock\ZenCartThemeStatusMapBuilder">
            <call method="setThemeService">
                <argument type="service" id="themeService" />
            </call>
            <call method="setBasePath">
              <argument type="collection">
                <argument>%zenmagick.root_dir%/themes</argument>
                <argument>%zencart.root_dir%/includes/templates</argument>
              </argument>
            </call>
        </service>

        <service id="themeService" class="ZenMagick\StoreBundle\Themes\ThemeService">
            <call method="setContainer">
                <argument type="service" id="service_container" />
            </call>
            <call method="setDefaultThemeId">
              <argument>%zenmagick.themes.default_theme%</argument>
            </call>
            <call method="setCache">
                <argument type="service" id="bootstrapCache" />
            </call>
        </service>

        <service id="manufacturerService" class="ZenMagick\StoreBundle\Services\Catalog\ManufacturerService">
            <call method="setCache">
                <argument type="service" id="servicesCache" />
            </call>
        </service>

        <service id="productService" class="ZMProducts">
            <call method="setCache">
                <argument type="service" id="servicesCache" />
            </call>
        </service>

        <service id="categoryService" class="ZMCategories">
            <call method="setCache">
                <argument type="service" id="servicesCache" />
            </call>
        </service>

        <service id="themeResourceResolver" class="ZenMagick\StoreBundle\View\ThemeResourceResolver">
            <call method="setContainer">
                <argument type="service" id="service_container" />
            </call>
        </service>

        <service id="storeTemplateView" class="ZenMagick\Http\View\TemplateView" scope="prototype">
            <call method="setContainer">
                <argument type="service" id="service_container" />
            </call>
            <call method="setResourceManager">
                <argument type="service" id="resourceManager" />
            </call>
            <call method="setResourceResolver">
                <argument type="service" id="themeResourceResolver" />
            </call>
        </service>

        <service id="pluginOptionsLoader" class="ZenMagick\StoreBundle\Plugins\PluginOptionsLoader">
            <call method="setConfigService">
                <argument type="service" id="configService" />
            </call>
        </service>

        <service id="rssLoader" class="ZenMagick\Http\Rss\RssFeedLoader">
            <call method="setCache">
                <argument type="service" id="persistentCache" />
            </call>
        </service>

        <service id="authenticationManager" class="ZenMagick\Base\Security\Authentication\AuthenticationManager" />

        <service id="blockService" class="ZMBlocks" />

        <service id="blockManager" class="ZenMagick\Http\Blocks\BlockManager" />

        <service id="productAssociationService" class="ZenMagick\StoreBundle\Services\Catalog\ProductAssociationService" />

        <service id="productTypeLayoutService" class="ZenMagick\StoreBundle\Services\Catalog\ProductTypeLayoutService" />

        <service id="checkoutHelper" class="ZenMagick\StoreBundle\Utils\CheckoutHelper" />

        <service id="shoppingCart" class="ZenMagick\StoreBundle\Model\Checkout\ShoppingCart">
            <property name="session" type="service" id="session" />
            <call method="setCheckoutHelper">
                <argument type="service" id="checkoutHelper" />
            </call>
            <tag name="zenmagick.http.session.persist" restore="checkoutHelper" context="storefront" />
        </service>

        <service id="shoppingCartService" class="ZenMagick\StoreBundle\Services\Checkout\ShoppingCartService" />

        <service id="zmvalidator" class="ZMValidator">
           <call method="setContainer">
                <argument type="service" id="service_container" />
            </call>
            <call method="load">
                <argument>%kernel.context_dir%/config/validation.php</argument>
            </call>
            <tag name="zenmagick.http.view.variable" key="validator" />
        </service>

        <service id="reviewService" class="ZenMagick\StoreBundle\Services\Catalog\ReviewService">
            <call method="setUseNickName">
                <argument>%apps.store.reviews.useNickName%</argument>
            </call>
        </service>

        <service id="taxService" class="ZenMagick\StoreBundle\Services\TaxService" />

        <service id="tokenService" class="ZenMagick\StoreBundle\Services\TokenService" />

        <service id="bannerService" class="ZenMagick\StoreBundle\Services\Templating\Banners" />

        <service id="productFeaturedService" class="ZenMagick\StoreBundle\Services\Catalog\ProductFeaturedService" />

        <service id="productSpecialsService" class="ZenMagick\StoreBundle\Services\Catalog\ProductSpecialsService">
           <call method="setContainer">
                <argument type="service" id="service_container" />
            </call>
        </service>

        <service id="couponService" class="ZenMagick\StoreBundle\Services\Coupons\CouponService" />

        <service id="ezPageService" class="ZMEZPages" />

        <service id="templateManager" class="ZenMagick\StoreBundle\Themes\TemplateManager">
           <call method="setContainer">
                <argument type="service" id="service_container" />
            </call>
            <tag name="zenmagick.http.view.variable" key="templateManager" />
        </service>

        <service id="currencyService" class="ZenMagick\StoreBundle\Services\Locale\CurrencyService" />

        <service id="languageService" class="ZenMagick\StoreBundle\Services\Locale\LanguageService">
            <call method="setContainer">
                <argument type="service" id="service_container" />
            </call>
        </service>

        <service id="paymentTypeService" class="ZMPaymentTypes" />

        <service id="shippingProviderService" class="ZMShippingProviders" />

        <service id="orderTotalService" class="ZMOrderTotals" />

        <service id="salemakerService" class="ZenMagick\StoreBundle\Services\Catalog\SalemakerService">
            <call method="setContainer">
                <argument type="service" id="service_container" />
            </call>
        </service>

        <service id="attributeService" class="ZMAttributes" />

        <service id="groupPricingService" class="ZMGroupPricing" />

        <service id="configService" class="ZenMagick\StoreBundle\Services\ConfigService">
            <call method="setContainer">
                <argument type="service" id="service_container" />
            </call>
        </service>
        <service id="configWidgetService" class="ZenMagick\StoreBundle\Services\ConfigWidgetService">
            <call method="setContainer">
                <argument type="service" id="service_container" />
            </call>
        </service>

        <service id="messageBuilder" class="ZenMagick\Http\Utils\MessageBuilder" scope="prototype">
            <call method="setView">
                <argument type="service" id="storeTemplateView" />
            </call>
        </service>

        <service id="contextConfigLoader" class="ZenMagick\StoreBundle\Utils\ContextConfigLoader" scope="prototype">
            <call method="setContext">
                <argument>%kernel.context%</argument>
            </call>
            <call method="setSettingsService">
                <argument type="service" id="settingsService" />
            </call>
            <call method="setContainer">
                <argument type="service" id="service_container" />
            </call>

        </service>

        <service id="defaultStoreBlockProvider" class="ZenMagick\StoreBundle\Widgets\StoreBlockProvider">
            <tag name="zenmagick.http.blocks.provider" />
        </service>

        <service id="similarOrderProductAssociationHandler" class="ZenMagick\StoreBundle\Model\Catalog\Associations\SimilarOrderProductAssociationHandler">
            <tag name="apps.store.associations.handler" />
        </service>

        <service id="productGroupPricingService" class="ZMProductGroupPricings" />

        <service id="zenCartAuthenticationProvider" class="ZenMagick\ZenCartBundle\Utils\ZenCartAuthenticationProvider">
            <tag name="zenmagick.base.security.authentication.provider" default="true" />
        </service>

        <!-- Impersonate FrameworkBundle provided GlobalVariables class although it takes it in the ctor -->
        <service id="globalVariablesTool" class="ZenMagick\StoreBundle\Toolbox\ToolboxGlobalVariables" scope="prototype">
            <call method="setContainer">
                <argument type="service" id="service_container" />
            </call>
            <tag name="zenmagick.http.toolbox.tool" key="app" />
        </service>

        <service id="formTool" class="ZenMagick\StoreBundle\Toolbox\ToolboxForm" scope="prototype">
            <tag name="zenmagick.http.toolbox.tool" key="form" />
        </service>

        <service id="htmlTool" class="ZenMagick\StoreBundle\Toolbox\ToolboxHtml" scope="prototype">
            <tag name="zenmagick.http.toolbox.tool" key="html" />
        </service>

        <service id="macroTool" class="ZenMagick\StoreBundle\Toolbox\ToolboxMacro" scope="prototype">
            <tag name="zenmagick.http.toolbox.tool" key="macro" />
        </service>

        <service id="netTool" class="ZenMagick\StoreBundle\Toolbox\ToolboxNet" scope="prototype">
            <tag name="zenmagick.http.toolbox.tool" key="net" />
        </service>

        <service id="utilsTool" class="ZenMagick\StoreBundle\Toolbox\ToolboxUtils" scope="prototype">
            <tag name="zenmagick.http.toolbox.tool" key="utils" />
        </service>

        <service id="annotation_reader" class="Doctrine\Common\Annotations\AnnotationReader" />

        <service id="moduleStatusCheck" class="ZenMagick\StoreBundle\Widgets\Status\MaintenanceStatusCheck" scope="prototype">
            <tag name="apps.store.admin.dashboard.widget.statusCheck" />
        </service>

    </services>
</container>
