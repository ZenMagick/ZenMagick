<project name="full-release">

    <!-- The full release build dir -->
    <property name="release.full.dir" value="${build.dir}/full" />
    <!-- Line ending to be used for multi line substitutes -->
    <property name="nl" value="&#13;&#10;" />
    <!-- assuming it's here ... -->
    <property name="zencart.base.dir" value="${zenmagick.src.dir}/vendor/zenmagick/zencart" />

    <target name="init-full-release" description="Init full release build.">
        <mkdir dir="${release.full.dir}" />
        <!-- overwrite to get a fresh copy -->
        <copy todir="${release.full.dir}" overwrite="true">
            <fileset dir="${zencart.base.dir}">
                <exclude name=".git/**" />
            </fileset>
        </copy>

    </target>

    <!-- build full release -->
    <!--<target name="full-release" depends="mod-release,init-full-release" description="Build full release including zen cart.">-->
    <target name="full-release" depends="init-full-release" description="Build full release including zen cart.">
        <!-- apply-full-release-patches -->
        <antcall target="apply-full-release-patches" />

        <!-- dump install phpBB stuff -->
        <antcall target="dump-phpbb-install"></antcall>

        <!-- move ZenMagick SQL to the right place -->
        <copy file="${zenmagick.src.dir}/apps/admin/installation/etc/config.sql" tofile="${release.full.dir}/zc_install/sql/plugins/mysql_config.sql" />
        <copy file="${zenmagick.src.dir}/apps/admin/installation/etc/token_install.sql" tofile="${release.full.dir}/zc_install/sql/plugins/mysql_token_install.sql" />
        <copy file="${zenmagick.src.dir}/apps/admin/installation/etc/admin_roles_install.sql" tofile="${release.full.dir}/zc_install/sql/plugins/mysql_admin_roles_install.sql" />
        <copy file="${zenmagick.src.dir}/apps/admin/installation/etc/admin_prefs_install.sql" tofile="${release.full.dir}/zc_install/sql/plugins/mysql_admin_prefs_install.sql" />
        <copy file="${zenmagick.src.dir}/apps/admin/installation/etc/sacs_perms_install.sql" tofile="${release.full.dir}/zc_install/sql/plugins/mysql_sacs_perms_install.sql" />
        <copy file="${zenmagick.src.dir}/apps/admin/installation/etc/theme_chaining_install.sql" tofile="${release.full.dir}/zc_install/sql/plugins/mysql_theme_chaining_install.sql" />
        <copy file="${zenmagick.src.dir}/apps/admin/installation/etc/review_title_install.sql" tofile="${release.full.dir}/zc_install/sql/plugins/mysql_review_title_install.sql" />
        <copy file="${zenmagick.src.dir}/apps/admin/installation/etc/static_pages_install.sql" tofile="${release.full.dir}/zc_install/sql/plugins/mysql_static_pages_install.sql" />
        <copy file="${basedir}/etc/build/full/sql/mysql_default_sideboxes.sql" todir="${release.full.dir}/zc_install/sql/plugins/" />
        <copy file="${basedir}/etc/build/full/sql/mysql_other.sql" todir="${release.full.dir}/zc_install/sql/plugins/" />

        <!-- copy docs -->
        <copy tofile="${release.full.dir}/Readme.txt" file="etc/build/docs/Readme-full.txt" />
        <copy tofile="${release.full.dir}/Install.txt" file="etc/build/docs/Install-full.txt" />

        <!-- remove unused zencart code -->
        <antcall target="drop-unused-zencart" />

        <!-- update install needed url -->
        <replaceregexp flags="m">
            <fileset file="${release.full.dir}/includes/application_top.php" />
            <regexp pattern="includes\/templates\/template_default\/templates\/tpl_zc_install_suggested_default.php"/>
            <substitution expression='zc_install/not_installed.php' />
        </replaceregexp>
        <copy file="${basedir}/etc/build/full/files/not_installed.php" todir="${release.full.dir}/zc_install/" />

        <!-- disable update check -->
        <antcall target="insert-before">
            <param name="insert.file" value="${release.full.dir}/admin/includes/header.php" />
            <param name="insert.regexp" value="ignore version check if not enabled or if not on main page or sysinfo page" />
            <param name="insert.substitution" value="  $zv_db_patch_ok=$version_check_sysinfo=false;" />
        </antcall>

        <!-- dump welcome page -->
        <antcall target="dump-welcome-install"></antcall>

        <!-- add zenmagick/themes to the list of folders to check for permission -->
        <antcall target="insert-after">
          <param name="insert.file" value="${release.full.dir}/zc_install/includes/modules/pages/inspect/header_php.php" />
            <param name="insert.regexp" value="'admin/images/graphs'=>'777 read/write/execute'" />
            <param name="insert.substitution" value="                 ,'zenmagick/themes'=>'777 read/write/execute'" />
        </antcall>

        <!-- fix -->
        <replaceregexp match="'admin/backups'=>'777 read\/write'" replace="'admin/backups'=>'777 read/write/execute'" flags="g"><fileset file="${release.full.dir}/zc_install/includes/modules/pages/inspect/header_php.php"></fileset></replaceregexp>
        <!-- TODO: make permission check check for existence?? -->
        <!-- drop since not included -->
        <replaceregexp match="'media'=>'777 read\/write\/execute'," replace="" flags="g"><fileset file="${release.full.dir}/zc_install/includes/modules/pages/inspect/header_php.php"></fileset></replaceregexp>
        <replaceregexp match="'pub'=>'777 read\/write\/execute'," replace="" flags="g"><fileset file="${release.full.dir}/zc_install/includes/modules/pages/inspect/header_php.php"></fileset></replaceregexp>

        <!-- add ZenMagick upgrade link -->
        <antcall target="add-upgrade-link" />

        <!-- add ZenMagick -->
        <unzip src="${dist.dir}/zenmagick-${zenmagick.version}.zip" dest="${release.full.dir}" />

        <!-- just in case (and the ZenMagick readme -->
        <antcall target="patch">
            <param name="patch.dir" value="${release.full.dir}" />
        </antcall>

        <!-- and zip -->
        <zip zipfile="${dist.dir}/${full.version.file}.zip" basedir="${release.full.dir}" />
        <checksum file="${dist.dir}/${full.version.file}.zip" fileext=".sha" algorithm="SHA" todir="${dist.dir}/checksum" />

        <copy file="${dist.dir}/${full.version.file}.zip" tofile="${dist.dir}/${full.latest.file}.zip" />
        <checksum file="${dist.dir}/${full.latest.file}.zip" fileext=".sha" algorithm="SHA" todir="${dist.dir}/checksum" />

        <!-- and TAR for easy incremental rsync plus smaller file size -->
        <tar destfile="${dist.dir}/${full.version.file}.tar" basedir="${release.full.dir}" />
        <checksum file="${dist.dir}/${full.version.file}.tar" fileext=".sha" algorithm="SHA" todir="${dist.dir}/checksum" />

        <copy file="${dist.dir}/${full.version.file}.tar" tofile="${dist.dir}/${full.latest.file}.tar" />
        <checksum file="${dist.dir}/${full.latest.file}.tar" fileext=".sha" algorithm="SHA" todir="${dist.dir}/checksum" />

        <bzip2 src="${dist.dir}/${full.version.file}.tar" destfile="${dist.dir}/${full.version.file}.tar.bz2" />
        <checksum file="${dist.dir}/${full.version.file}.tar.bz2" fileext=".sha" algorithm="SHA" todir="${dist.dir}/checksum" />

        <copy file="${dist.dir}/${full.version.file}.tar.bz2" tofile="${dist.dir}/${full.latest.file}.tar.bz2" />
        <checksum file="${dist.dir}/${full.latest.file}.tar.bz2" fileext=".sha" algorithm="SHA" todir="${dist.dir}/checksum" />
    </target>

    <!-- patch full release -->
    <target name="apply-full-release-patches" depends="init-full-release" description="Patch full release including zen cart.">
        <!-- patch main index.php -->
        <antcall target="insert-before">
            <param name="insert.file" value="${release.full.dir}/index.php" />
            <param name="insert.regexp" value="includes/application_top.php" />
            <param name="insert.substitution" value="  require 'zenmagick/apps/storefront/web/index.php'; return;" />
        </antcall>

        <!-- create theme dummy files -->
        <antcall target="create-theme-dummy"><param name="theme.id" value='base' /></antcall>
        <antcall target="create-theme-dummy"><param name="theme.id" value='demo' /></antcall>

        <!-- create sidebox dummy files -->
        <antcallback target="create-sidebox-dummies" return="datetime.sidebox.dummies.cutoff"><param name="theme.id" value='base' /></antcallback>

        <!-- edit customer patch -->
        <antcall target="insert-after">
          <param name="insert.file" value="${release.full.dir}/admin/customers.php" />
            <param name="insert.regexp" value="where customers_email_address = " />
            <param name="insert.substitution" value="  and NOT customers_password = ''" />
        </antcall>

        <!-- coupon admin patch -->
        <antcall target="insert-after">
            <param name="insert.file" value="${release.full.dir}/admin/coupon_admin.php" />
            <param name="insert.regexp" value="audience_select = get_audience_sql_query" />
            <param name="insert.substitution" value='    $audience_select["query_string"] = $db->bindVars("select customers_id, customers_firstname, customers_lastname, customers_email_address from " . TABLE_CUSTOMERS . " where customers_email_address = :emailAddress", ":emailAddress", zen_db_prepare_input($_POST["customers_email_address"]), "string"); // added by ZenMagick' />
        </antcall>
        <antcall target="insert-after">
            <param name="insert.file" value="${release.full.dir}/admin/coupon_admin.php" />
            <param name="insert.regexp" value="html_msg\['EMAIL_FIRST_NAME'\] =" />
            <param name="insert.substitution" value='      $html_msg["accountId"] = $mail->fields["customers_id"]; // added by ZenMagick' />
        </antcall>

        <!-- create zip with all patched files -->
        <mkdir dir="${build.dir}/zenmagick/etc" />
        <zip zipfile="${build.dir}/zenmagick/etc/zencart-patched-${zenmagick.version}.zip">
            <fileset dir="${release.full.dir}">
                <include name="includes/functions/html_output.php" />
                <!--include name="admin/includes/functions/html_output.php" /-->
                <include name="includes/functions/functions_email.php" />
                <include name="admin/customers.php" />
                <include name="includes/application_bottom.php" />
                <include name="index.php" />
                <include name="admin/coupon_admin.php" />
                <include name="includes/templates/base/**" />
                <include name="includes/templates/demo/**" />
            </fileset>

            <!-- sidebox (dummies); created since this script started -->
            <fileset dir="${release.full.dir}" includes="includes/modules/sideboxes/*.php">
                <present present="srconly" targetdir="${zencart.base.dir}"/>
            </fileset>
        </zip>
    </target>


    <!-- function rename -->
    <target name="rename-function" description="Rename a function.">
        <!-- rename.file, rename.function, rename.suffix  -->
        <replaceregexp flags="m">
            <fileset file="${rename.file}" />
            <regexp pattern="(.*function \s*)(${rename.function})(\s*\(.*\{)(\s*$)"/>
            <substitution expression='\1\2${rename.suffix}\3 /* modified by ZenMagick installation patcher */\4' />
        </replaceregexp>
    </target>

    <!-- insert after -->
    <target name="insert-after" description="Insert code after the given pattern.">
        <!-- insert.file, insert.regexp, insert.substitution  -->
        <replaceregexp flags="m" byline="true">
            <fileset file="${insert.file}" />
            <regexp pattern="(.*${insert.regexp}.*)"/>
            <substitution expression="\1${nl}${insert.substitution}" />
        </replaceregexp>
    </target>

    <!-- insert before -->
    <target name="insert-before" description="Insert code before the given pattern.">
        <!-- insert.file, insert.regexp, insert.substitution  -->
        <replaceregexp flags="m" byline="true">
            <fileset file="${insert.file}" />
            <regexp pattern="(.*${insert.regexp}.*)"/>
            <substitution expression="${insert.substitution}${nl}\1" />
        </replaceregexp>
    </target>

    <!-- build theme dummy -->
    <target name="create-theme-dummy" description="Create theme dummy file for zen cart.">
        <!-- theme.id  -->
        <mkdir dir="${release.full.dir}/includes/templates/${theme.id}" />

        <!-- get a defined filename -->
        <concat destfile="${build.dir}/theme_info.php"><fileset dir="${zenmagick.src.dir}/themes/${theme.id}" includes="*.yaml"/></concat>
        <!-- prepare info lines -->
        <replaceregexp flags="" byline="true">
            <fileset file="${build.dir}/theme_info.php" />
            <regexp pattern="(name|version|author|description):\s(.*)"/>
            <substitution expression="  $template_\1 = \2;" />
        </replaceregexp>

        <concat destfile="${build.dir}/template_info.php" eol="dos">
            <header filtering="no" trimleading="yes">&lt;?php /** dummy file created by ZenMagick installation patcher **/
            </header>
            <path path="${build.dir}/theme_info.php"/>
            <filterchain>
                <linecontains>
                    <contains value="template_"/>
                </linecontains>
            </filterchain>
            <footer filtering="no" trimleading="no">  $template_screenshot = 'preview.jpg';
?&gt;</footer>
        </concat>

        <!-- copy to zencart's template folder -->
        <copy file="${build.dir}/template_info.php" todir="${release.full.dir}/includes/templates/${theme.id}" />

        <!-- copy image as well... -->
        <mkdir dir="${release.full.dir}/includes/templates/${theme.id}/images" />
        <copy file="${zenmagick.src.dir}/themes/${theme.id}/preview.jpg" todir="${release.full.dir}/includes/templates/${theme.id}/images" />
    </target>

    <!-- add ZenMagick upgrade link -->
    <target name="add-upgrade-link" description="Add upgrade link to final installation page.">
      <replaceregexp match="\?\>" replace="?>&lt;div class='center' style='padding:4px; margin:9px 5px;'>&lt;a class='button' style='color:white;background:#093' href='&lt;?php echo HTTP_SERVER.DIR_WS_CATALOG ?>zenmagick/apps/admin/web/upgrade.php' target='_blank'>Run Required ZenMagick Upgrade&lt;/a>&lt;br>&lt;br>&lt;/div>"><fileset file="${release.full.dir}/zc_install/includes/templates/template_default/templates/finished_default.php"></fileset></replaceregexp>
    </target>

    <!-- build sidebox dummy files -->
    <target name="create-sidebox-dummies" description="Create sidebox dummy files for zen cart.">
        <concat destfile="${build.dir}/sidebox_dummy.php" eol="dos">&lt;?php /** dummy file created by ZenMagick installation patcher **/ ?&gt;</concat>
        <!-- create **all** files -->
        <mkdir dir="${build.dir}/dummies"/>
        <foreach target="create-sidebox-dummy" param="filename">
            <path>
              <fileset dir="${zenmagick.src.dir}/apps/storefront/templates/boxes" includes="*.php" />
              <fileset dir="${zenmagick.src.dir}/themes/demo/templates/boxes" includes="*.php" />
            </path>
        </foreach>

        <!-- touch existing to only update missing files -->
        <touch mkdirs="true">
            <fileset dir="${release.full.dir}/includes/modules/sideboxes/"/>
        </touch>

        <copy overwrite="false" todir="${release.full.dir}/includes/modules/sideboxes/">
            <fileset dir="${build.dir}/dummies" includes="*.php" />
        </copy>
    </target>

    <!-- create single sidebox dummy -->
    <target name="create-sidebox-dummy" description="Create single sidebox dummy.">
        <basename property="basename" file="${filename}"/>
        <copy overwrite="true" tofile="${build.dir}/dummies/${basename}" file="${build.dir}/sidebox_dummy.php" />
    </target>

    <!-- remove phpBB from installation -->
    <target name="dump-phpbb-install" description="Remove phpBB dialog from installation.">
        <replaceregexp flags="m">
            <fileset file="${release.full.dir}/zc_install/includes/templates/template_default/sideboxes/navigation.php" />
            <regexp pattern="^.*phpbb.*$"/>
            <substitution expression='' />
        </replaceregexp>

        <!-- require phpbb_setup POST handler code... -->
        <antcall target="insert-before">
            <param name="insert.file" value="${release.full.dir}/zc_install/includes/modules/pages/system_setup/header_php.php" />
            <param name="insert.regexp" value="main_page=phpbb_setup" />
            <param name="insert.substitution" value="      require dirname(dirname(__FILE__)).'/phpbb_setup/header_php.php';exit;" />
        </antcall>
    </target>

    <!-- remove welcome from installation -->
    <target name="dump-welcome-install" description="Remove welcome dialog from installation.">
        <replaceregexp>
            <fileset file="${release.full.dir}/zc_install/index.php" />
            <regexp pattern="'index'"/>
            <substitution expression="'license'" />
        </replaceregexp>
        <delete includeemptydirs="true">
            <fileset dir="${release.full.dir}/zc_install/includes/modules/pages/index" />
            <fileset file="${release.full.dir}/zc_install/includes/templates/template_default/templates/index_default.php" />
        </delete>
        <replaceregexp flags="m">
            <fileset file="${release.full.dir}/zc_install/includes/templates/template_default/sideboxes/navigation.php" />
            <regexp pattern="^.*welcome.*$"/>
            <substitution expression='' />
        </replaceregexp>
    </target>

    <!-- remove unused zencart code and add as zc_install zips -->
    <target name="drop-unused-zencart" description="Remove unused zencart code from main install, but leave as zc_install zips.">
        <!-- create install optional folder -->
        <mkdir dir="${release.full.dir}/zc_install/optional" />

        <!-- general stuff -->
        <zip zipfile="${release.full.dir}/zc_install/optional/extras.zip">
            <fileset dir="${release.full.dir}" includes="extras/" />
            <fileset dir="${release.full.dir}" includes="docs/" />
        </zip>

        <!-- templates -->
        <zip zipfile="${release.full.dir}/zc_install/optional/templates.zip">
            <fileset dir="${release.full.dir}" includes="includes/templates/classic/" />
            <fileset dir="${release.full.dir}" includes="includes/templates/template_default/" />
            <fileset dir="${release.full.dir}" includes="/includes/languages/classic/" />
            <fileset dir="${release.full.dir}" includes="includes/languages/english/classic/" />
            <fileset dir="${release.full.dir}" includes="includes/languages/english/extra_definitions/classic/" />
            <fileset dir="${release.full.dir}" includes="includes/languages/english/html_includes/classic/" />
            <fileset dir="${release.full.dir}" includes="includes/languages/english/modules/order_total/classic/" />
            <fileset dir="${release.full.dir}" includes="includes/languages/english/modules/payment/classic/" />
            <fileset dir="${release.full.dir}" includes="includes/languages/english/modules/shipping/classic/" />
            <fileset dir="${release.full.dir}" includes="includes/modules/classic/" />
            <fileset dir="${release.full.dir}" includes="includes/modules/sideboxes/classic/" />
        </zip>

        <!-- music product info -->
        <zip zipfile="${release.full.dir}/zc_install/optional/music_product_info.zip">
            <fileset dir="${release.full.dir}" includes="pub/" />
            <fileset dir="${release.full.dir}" includes="media/" />
            <fileset dir="${release.full.dir}" includes="download/" />
        </zip>

        <delete includeemptydirs="true">
            <!-- general folders -->
            <fileset dir="${release.full.dir}" includes="extras/" />
            <fileset dir="${release.full.dir}" includes="docs/" />

            <!-- unused template code -->
            <fileset dir="${release.full.dir}" includes="includes/templates/classic/" />
            <fileset dir="${release.full.dir}" includes="includes/templates/template_default/" />
            <fileset dir="${release.full.dir}" includes="/includes/languages/classic/" />
            <fileset dir="${release.full.dir}" includes="includes/languages/english/classic/" />
            <fileset dir="${release.full.dir}" includes="includes/languages/english/extra_definitions/classic/" />
            <fileset dir="${release.full.dir}" includes="includes/languages/english/html_includes/classic/" />
            <fileset dir="${release.full.dir}" includes="includes/languages/english/modules/order_total/classic/" />
            <fileset dir="${release.full.dir}" includes="includes/languages/english/modules/payment/classic/" />
            <fileset dir="${release.full.dir}" includes="includes/languages/english/modules/shipping/classic/" />
            <fileset dir="${release.full.dir}" includes="includes/modules/classic/" />
            <fileset dir="${release.full.dir}" includes="includes/modules/sideboxes/classic/" />

            <!-- downloads / music media -->
            <fileset dir="${release.full.dir}" includes="pub/" />
            <fileset dir="${release.full.dir}" includes="media/" />
            <fileset dir="${release.full.dir}" includes="download/" />
        </delete>
    </target>

</project>
