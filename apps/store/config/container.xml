<?xml version="1.0" ?>

<!-- http container -->
<container xmlns="http://symfony.com/schema/dic/services"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <parameters>
        <parameter key="zenmagick.cacheIds" type="collection">
            <parameter>transientCache</parameter>
            <parameter>persistentCache</parameter>
            <parameter>servicesCache</parameter>
            <parameter>templateCache</parameter>
            <parameter>bootstrapCache</parameter>
        </parameter>
        <parameter key="zenmagick.base.plugins.defaultPluginClass">Plugin</parameter>
        <parameter key="apps.store.reviews.useNickName">false</parameter>
        <parameter key="zenmagick.themes.default_theme">base</parameter>
    </parameters>

    <services>
        <service id="servicesCache" class="zenmagick\base\cache\MemoryCache" scope="container">
            <call method="init">
                <argument>services</argument>
                <argument type="collection" />
            </call>
        </service>

        <service id="templateCache" class="zenmagick\base\cache\FileCache" scope="container">
            <call method="init">
                <argument>services</argument>
                <argument type="collection">
                    <argument key="cacheTTL">300</argument>
                    <argument key="cacheDir">%kernel.cache_dir%/templates/</argument>
                </argument>
            </call>
        </service>

        <service id="accountService" class="ZMAccounts" scope="container" />

        <service id="addressService" class="ZMAddresses" scope="container" />

        <service id="countryService" class="zenmagick\apps\store\services\location\CountryService" scope="container" />

        <service id="orderService" class="ZMOrders" scope="container" />

        <service id="theme" class="zenmagick\apps\store\themes\Theme" scope="prototype" />

        <!-- @todo move to bundle xml when we have one -->
        <!-- <service id="themeStatusMapBuilder" class="zenmagick\apps\store\themes\ThemeStatusMapBuilder" scope="container"> -->
        <service id="themeStatusMapBuilder" class="zenmagick\apps\store\bundles\ZenCartBundle\mock\ZenCartThemeStatusMapBuilder" scope="container">
            <call method="setThemeService">
                <argument type="service" id="themeService" />
            </call>
            <call method="setBasePath">
              <argument type="collection">
                <argument>%kernel.root_dir%/themes</argument>
                <argument>%zencart.root_dir%/includes/templates</argument>
              </argument>
            </call>
        </service>

        <service id="themeService" class="zenmagick\apps\store\themes\ThemeService" scope="container">
            <call method="setContainer">
                <argument type="service" id="service_container" />
            </call>
            <call method="setDefaultThemeId">
              <argument>%zenmagick.themes.default_theme%</argument>
            </call>
            <call method="setCache">
                <argument type="service" id="bootstrapCache" />
            </call>
        </service>

        <service id="manufacturerService" class="zenmagick\apps\store\services\catalog\ManufacturerService" scope="container">
            <call method="setCache">
                <argument type="service" id="servicesCache" />
            </call>
        </service>

        <service id="productService" class="ZMProducts" scope="container">
            <call method="setCache">
                <argument type="service" id="servicesCache" />
            </call>
        </service>

        <service id="categoryService" class="ZMCategories" scope="container">
            <call method="setCache">
                <argument type="service" id="servicesCache" />
            </call>
        </service>

        <service id="themeResourceResolver" class="zenmagick\apps\store\view\ThemeResourceResolver" scope="container">
            <call method="setContainer">
                <argument type="service" id="service_container" />
            </call>
        </service>

        <service id="storeTemplateView" class="zenmagick\http\view\TemplateView" scope="prototype">
            <call method="setContainer">
                <argument type="service" id="service_container" />
            </call>
            <call method="setResourceManager">
                <argument type="service" id="resourceManager" />
            </call>
            <call method="setResourceResolver">
                <argument type="service" id="themeResourceResolver" />
            </call>
        </service>

        <service id="rssLoader" class="zenmagick\http\rss\RssFeedLoader" scope="container">
            <call method="setCache">
                <argument type="service" id="persistentCache" />
            </call>
        </service>

        <service id="authenticationManager" class="zenmagick\base\security\authentication\AuthenticationManager" scope="container" />

        <service id="blockService" class="ZMBlocks" scope="container" />

        <service id="blockManager" class="zenmagick\http\blocks\BlockManager" scope="container" />

        <service id="productAssociationService" class="zenmagick\apps\store\services\catalog\ProductAssociationService" scope="container" />

        <service id="productTypeLayoutService" class="zenmagick\apps\store\services\catalog\ProductTypeLayoutService" scope="container" />

        <service id="checkoutHelper" class="zenmagick\apps\store\utils\CheckoutHelper" scope="container" />

        <service id="shoppingCart" class="zenmagick\apps\store\model\checkout\ShoppingCart" scope="container">
            <call method="setCheckoutHelper">
                <argument type="service" id="checkoutHelper" />
            </call>
            <tag name="zenmagick.http.session.persist" restore="checkoutHelper" context="storefront" />
        </service>

        <service id="shoppingCartService" class="zenmagick\apps\store\services\checkout\ShoppingCartService" scope="container" />

        <service id="zmvalidator" class="ZMValidator" scope="container">
           <call method="setContainer">
                <argument type="service" id="service_container" />
            </call>
            <call method="load">
                <argument>%kernel.context_dir%/config/validation.php</argument>
            </call>
            <tag name="zenmagick.http.view.variable" key="validator" />
        </service>

        <service id="reviewService" class="zenmagick\apps\store\services\catalog\ReviewService" scope="container">
            <call method="setUseNickName">
                <argument>%apps.store.reviews.useNickName%</argument>
            </call>
        </service>

        <service id="taxService" class="zenmagick\apps\store\services\TaxService" scope="container" />

        <service id="tokenService" class="zenmagick\apps\store\services\TokenService" scope="container" />

        <service id="bannerService" class="zenmagick\apps\store\services\templating\Banners" scope="container" />

        <service id="productFeaturedService" class="zenmagick\apps\store\services\catalog\ProductFeaturedService" scope="container" />

        <service id="productSpecialsService" class="zenmagick\apps\store\services\catalog\ProductSpecialsService" scope="container">
           <call method="setContainer">
                <argument type="service" id="service_container" />
            </call>
        </service>

        <service id="couponService" class="zenmagick\apps\store\services\coupons\CouponService" scope="container" />

        <service id="ezPageService" class="ZMEZPages" scope="container" />

        <service id="templateManager" class="zenmagick\apps\store\themes\TemplateManager" scope="container">
           <call method="setContainer">
                <argument type="service" id="service_container" />
            </call>
            <tag name="zenmagick.http.view.variable" key="templateManager" />
        </service>

        <service id="currencyService" class="zenmagick\apps\store\services\locale\CurrencyService" scope="container" />

        <service id="languageService" class="zenmagick\apps\store\services\locale\LanguageService" scope="container">
            <call method="setContainer">
                <argument type="service" id="service_container" />
            </call>
        </service>

        <service id="paymentTypeService" class="ZMPaymentTypes" scope="container" />

        <service id="shippingProviderService" class="ZMShippingProviders" scope="container" />

        <service id="orderTotalService" class="ZMOrderTotals" scope="container" />

        <service id="salemakerService" class="zenmagick\apps\store\services\catalog\SalemakerService" scope="container">
            <call method="setContainer">
                <argument type="service" id="service_container" />
            </call>
        </service>

        <service id="attributeService" class="ZMAttributes" scope="container" />

        <service id="groupPricingService" class="ZMGroupPricing" scope="container" />

        <service id="configService" class="zenmagick\apps\store\services\ConfigService" scope="container" />
        <service id="configWidgetService" class="zenmagick\apps\store\services\ConfigWidgetService" scope="container" parent="configService" />

        <service id="messageBuilder" class="zenmagick\http\utils\MessageBuilder" scope="prototype">
            <call method="setView">
                <argument type="service" id="storeTemplateView" />
            </call>
        </service>

        <service id="contextConfigLoader" class="zenmagick\apps\store\utils\ContextConfigLoader" scope="prototype">
            <call method="setContext">
                <argument>%kernel.context%</argument>
            </call>
            <call method="setSettingsService">
                <argument type="service" id="settingsService" />
            </call>
        </service>

        <service id="defaultStoreBlockProvider" class="zenmagick\apps\store\widgets\StoreBlockProvider" scope="container">
            <tag name="zenmagick.http.blocks.provider" />
        </service>

        <service id="similarOrderProductAssociationHandler" class="zenmagick\apps\store\model\catalog\associations\SimilarOrderProductAssociationHandler" scope="container">
            <tag name="apps.store.associations.handler" />
        </service>

        <service id="productGroupPricingService" class="ZMProductGroupPricings" scope="container" />

        <service id="urlManager" class="ZMUrlManager" scope="container">
            <call method="setContainer">
                <argument type="service" id="service_container" />
            </call>
            <call method="loadFile">
                <argument>%kernel.context_dir%/config/url_mappings.yaml</argument>
            </call>
        </service>

        <service id="zenCartAuthenticationProvider" class="zenmagick\apps\store\bundles\ZenCartBundle\utils\ZenCartAuthenticationProvider" scope="container">
            <tag name="zenmagick.base.security.authentication.provider" default="true" />
        </service>

        <!-- Impersonate FrameworkBundle provided GlobalVariables class although it takes it in the ctor -->
        <service id="globalVariablesTool" class="zenmagick\apps\store\toolbox\ToolboxGlobalVariables" scope="prototype">
            <call method="setContainer">
                <argument type="service" id="service_container" />
            </call>
            <tag name="zenmagick.http.toolbox.tool" key="app" />
        </service>

        <service id="formTool" class="zenmagick\apps\store\toolbox\ToolboxForm" scope="prototype">
            <tag name="zenmagick.http.toolbox.tool" key="form" />
        </service>

        <service id="htmlTool" class="zenmagick\apps\store\toolbox\ToolboxHtml" scope="prototype">
            <tag name="zenmagick.http.toolbox.tool" key="html" />
        </service>

        <service id="macroTool" class="zenmagick\apps\store\toolbox\ToolboxMacro" scope="prototype">
            <tag name="zenmagick.http.toolbox.tool" key="macro" />
        </service>

        <service id="netTool" class="zenmagick\apps\store\toolbox\ToolboxNet" scope="prototype">
            <tag name="zenmagick.http.toolbox.tool" key="net" />
        </service>

        <service id="utilsTool" class="zenmagick\apps\store\toolbox\ToolboxUtils" scope="prototype">
            <tag name="zenmagick.http.toolbox.tool" key="utils" />
        </service>

        <service id="annotation_reader" class="Doctrine\Common\Annotations\AnnotationReader" scope="container" />

        <service id="moduleStatusCheck" class="zenmagick\apps\store\widgets\status\MaintenanceStatusCheck" scope="prototype">
            <tag name="apps.store.admin.dashboard.widget.statusCheck" />
        </service>

        <!-- set siwftmailer.transport to @zencartTransport to use the zencart legacy email system -->
        <service id="zencartTransport" class="zenmagick\apps\store\bundles\ZenCartBundle\utils\ZenCartTransport" scope="container" />
        <!-- @todo move to bundle xml when we have one -->
        <service id="zenCartAutoLoader" class="zenmagick\apps\store\bundles\ZenCartBundle\utils\ZenCartAutoLoader" scope="container">
            <call method="setRootDir">
                <argument>%zencart.root_dir%</argument>
            </call>

            <call method="setContainer">
                <argument type="service" id="service_container" />
            </call>
        </service>
    </services>
</container>
